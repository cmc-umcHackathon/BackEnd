name: Neodinary Hackerthon Workflow with Gradle

on:
  pull_request:
    branches:
      - main
      - dev
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Create application.yml
        run: |
          cd ./src/main/resources
          echo "${{ secrets.APPLICATION }}" > ./application.yml
        shell: bash

      - name: Build with Gradle without tests
        run: ./gradlew clean bootJar -x test

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/*.jar"
          target: "/home/ubuntu/BackEnd/build/libs/"

  CD:
    needs: CI
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/BackEnd
            
            sudo docker-compose down
            
            git pull --no-rebase origin main
            
            ./gradlew clean bootjar
            
            if [ "$(sudo docker ps -qa)" ]; then
              sudo docker ps -qa | xargs -r sudo docker rm -f
            fi
            sudo docker rmi $(sudo docker images -q) || true
            
            sudo docker-compose up --build -d

            sudo docker image prune -f